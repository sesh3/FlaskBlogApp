# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME: "flask-app-packages"
  EB_APP_NAME:               "MyFlask"
  EB_ENV_NAME:               "MyFlask-env"
  DEPLOY_PACKAGE_NAME:       "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME:           "eu-central-1"
  

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
       - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:  
  ci_part:
   runs-on: ubuntu-latest  
    
   steps:
    - name: Git clone repo
      uses: actions/checkout@v2
      
    - name: Create ZIP deployment package
      run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
      
    - name: Config AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id      :  ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key  :  ${{ secrets.AWS_SECRET_KEY }}
        aws-region             :  ${{ env.AWS_REGION_NAME }}
    
    - name: Copy Deployment package to S3 bucket
      run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
    
    - name: Print Massage for CI finish
      run:  echo "CI Pipeline part Finished successfully"
      
    
    
    
    
  cd_part:
    runs-on: ubuntu-latest
    needs: [ci_part]

    steps:
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id    :  ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key:  ${{ secrets.AWS_SECRET_KEY }}
        aws-region           :  ${{ env.AWS_REGION_NAME }}
    
    - name: Create new ElasticBeanstalk Application Version
      run : |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_APP_NAME }} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}" \
        --description "CoimmitSHA-${{ github.sha }}"
       
    - name: Deploy new ElasticBeanstalk Application Version
      run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENV_NAME }} --version-label "Ver-${{ github.sha }}"
      
    - name: Print Happy Message for CD finish
      run : echo "CD Pipeline part Finished successfully!"
